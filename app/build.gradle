apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

/**
 * 在项目根路径下创建一个文件key.properties
 */
def keystorePropertiesFile = rootProject.file('key.properties')
//创建一个properties对象
def keystoreProperties = new Properties()
//加载key.properties里面的内容
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tourye.zhong"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile']) //签名文件
            storePassword keystoreProperties['storePassword']  //签名文件密码
            keyAlias keystoreProperties['keyAlias']       //签名文件别名
            keyPassword keystoreProperties['keyPassword']     //别名密码
        }

        debug {
            storeFile file(keystoreProperties['storeFile']) //签名文件
            storePassword keystoreProperties['storePassword']  //签名文件密码
            keyAlias keystoreProperties['keyAlias']       //签名文件别名
            keyPassword keystoreProperties['keyPassword']     //别名密码
        }
    }

    buildTypes {

        debug {
            //脚本构建时网址进行切换
            buildConfigField('String', 'BASE_URL', '"http://api.taoye.xorout.com/api/v1"')
            buildConfigField('String', 'WEB_URL', '"http://taoye.xorout.com/app2/?jwt="')

            zipAlignEnabled true //Zipalign优化
            shrinkResources false // 移除无用的resource文件
            minifyEnabled false //是否开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug//在此调用签名方法
        }

        release {
            //脚本构建时网址进行切换
            buildConfigField('String', 'BASE_URL', '"http://api.taoye2.xorout.com/api/v1"')
            buildConfigField('String', 'WEB_URL', '"http://taoye.xorout.com/app2/?jwt="')

            zipAlignEnabled true //Zipalign优化
            shrinkResources false // 移除无用的resource文件
            minifyEnabled false //是否开启混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//在此调用签名方法
        }
    }

    //设置包名
    applicationVariants.all { variant ->
        def buildType = variant.buildType.name
        //android studio3.0之前命名
//            variant.outputs.each { output ->
//                def outputFile = output.outputFile
//                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    //应用名+版本号+渠道名+构建类型+时间戳${variant.flavorName}
//                    def fileName = "green_v${defaultConfig.versionName}_${variant.flavorName}_${releaseTime()}_${buildType}.apk"
//                    //APK输出到默认目录
//                    output.outputFile = new File(outputFile.parent, fileName)
//
//                }
//            }
        //android studio3.0之后命名
        variant.outputs.all {
//            outputFileName = "tourye_v${defaultConfig.versionName}_${variant.flavorName}_${releaseTime()}_${buildType}.apk"
            outputFileName = "tourye_v${defaultConfig.versionName}_${releaseTime()}_${buildType}.apk"
        }
    }

//    productFlavors {//多渠道打包
//        //命名规则和java一样，不能数字打头，不能纯数字
//        zhushou360 {}
//        xiaomi {}
//    }
//
//    productFlavors.all { flavor ->
//        //为manifest中meta-data的占位符进行赋值
//        flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
//    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {//加上这写代码
        pickFirst 'META-INF/*'
    }
}

//发布时间
def releaseTime() {
    //设置发布时间的时候不要设置小时，这样的话每个小时生成的包都不一样，在安装时studio会报找不见apk的异常
//    return new Date().format('MMddHH', TimeZone.getTimeZone('GMT+8'))
    return new Date().format('MMdd', TimeZone.getTimeZone('GMT+8'))
}

MobSDK {

    appKey "28bb62327f7c4"
    appSecret "db4ad41b759616d1ee07d8b1666326ae"

    ShareSDK {
        //平台配置信息
        devInfo {
            //如果需要添加新的平台，在这里进行闭包的添加------微信、朋友圈、qq、空间需要单独进行配置
            SinaWeibo {
                appKey "2763075870"
                appSecret "5a796d64e1047494d9a200b03c09c4cf"
                bypassApproval false//很关键，不加报错
                callbackUri "http://www.sharesdk.cn"//回调地址
            }
            QZone {
                appId "1107926873"
                appKey "WftzNBJMtp48qnSb"
            }
            WechatMoments {
                appId "wx21093a016c1416c3"
                appSecret "cdfd28a3ef5b52fb82ed1f6e8ce972de"
            }
            Wechat {
                appId "wx21093a016c1416c3"
                appSecret "cdfd28a3ef5b52fb82ed1f6e8ce972de"
                bypassApproval false
            }
            QQ {
                appId "1107926873"
                appKey "WftzNBJMtp48qnSb"
                bypassApproval false
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    //日志打印工具
    implementation 'com.orhanobut:logger:2.1.1'
    //网络请求工具
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    //网络请求拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    //json解析
    implementation 'com.google.code.gson:gson:2.8.2'
    //下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    //图片加载框架
    implementation 'com.github.bumptech.glide:glide:4.5.0'
    //动态权限
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    //视频播放
    implementation('com.shuyu:GSYVideoPlayer:6.0.1') {
        exclude group: 'com.android.support'
    }
    //图片选择器
    implementation('com.github.LuckSiege.PictureSelector:picture_library:v2.2.3') {
        exclude group: 'com.github.bumptech.glide'
        exclude group: 'io.reactivex.rxjava2'
        exclude group: 'com.android.support'
    }
    // 腾讯移动推送--信鸽
    implementation 'com.tencent.tac:tac-core:1.3.+'
    implementation 'com.tencent.tac:tac-messaging:1.3.+'
    //event-bus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    //解决方法数超过65535
    implementation "com.android.support:multidex:1.0.0"
    //导航栏
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'

}
// 在文件最后使用插件
apply plugin: 'com.tencent.tac.services'